//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use chrono::NaiveDateTime;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "caja")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub inicio: NaiveDateTime,
    pub cierre: Option<NaiveDateTime>,
    #[sea_orm(column_type = "Double")]
    pub monto_inicio: f32,
    #[sea_orm(column_type = "Double", nullable)]
    pub monto_cierre: Option<f32>,
    #[sea_orm(column_type = "Double")]
    pub ventas_totales: f32,
    pub cajero: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::movimiento::Entity")]
    Movimiento,
}

impl Related<super::movimiento::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Movimiento.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
