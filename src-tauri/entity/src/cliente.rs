//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.10

use chrono::NaiveDateTime;
use sea_orm::entity::prelude::*;
#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "cliente")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub nombre: String,
    pub dni: i64,
    pub credito: bool,
    #[sea_orm(column_type = "Double", nullable)]
    pub limite: Option<f64>,
    pub activo: bool,
    pub created: NaiveDateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::venta::Entity")]
    Venta,
}

impl Related<super::venta::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Venta.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
